<?php

/**
 * @file
 * Sends Webform results to Leadtrekker's Forms API.
 */

use Drupal\Component\Serialization\Json;
use Drupal\Core\Url;
use GuzzleHttp\Exception\RequestException;

/**
 * Implements hook_help().
 */
function leadtrekker_help($route_name) {
  $output = '';
  switch ($route_name) {
    case 'help.page.leadtrekker':
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Leadtrekker supports using a JavaScript tracking system to analyze potential leads on your site.
        You can get the JavaScript code from your Leadtrekker settings, under External Site Traffic Logging, and paste it
        into the Leadtrekker integration settings page in Drupal to have it automatically included on every page.') . '</p>';
      break;

    case 'leadtrekker.form_settings':
      $output .= '<p>' . t("To post this form's results to Leadtrekker you will need to select the Leadtrekker form and map the
        webform fields to the available Leadtrekker fields.") . '</p>';
      break;
  }
  return $output;
}

/**
 * Returns the default value for the given arguments.
 */
function _leadtrekker_default_value($id, $leadtrekker_guid = NULL, $webform_field = NULL) {
  if (empty($leadtrekker_guid)) {
    return db_query_range("SELECT leadtrekker_guid FROM {leadtrekker} h WHERE h.id = :id", 0, 1, array(':id' => $id))->fetchField();
  }
  else {
    return db_query_range("SELECT leadtrekker_field FROM {leadtrekker} h WHERE h.id = :id AND h.leadtrekker_guid = :guid AND h.webform_field = :webform_field", 0, 1, array(
      ':id' => $id,
      ':guid' => $leadtrekker_guid,
      ':webform_field' => $webform_field,
    ))->fetchField();
  }
}

/**
 * Gets the list of forms from Leadtrekker via the API.
 */
function _leadtrekker_get_forms() {
  $access_token = \Drupal::config('leadtrekker.settings')->get('leadtrekker_access_token');

  if (empty($access_token)) {
    return array('error' => t('This site is not connected to a Leadtrekker Account.'));
  }

  $api = 'https://api.hubapi.com/contacts/v1/forms';
  $options = [
    'query' => ['access_token' => $access_token],
  ];
  $url = Url::fromUri($api, $options)->toString();
  try {
    $response = \Drupal::httpClient()->get($url);
    $data = (string) $response->getBody();
    return ['value' => Json::decode($data)];
  }
  catch (RequestException $e) {

  }
}

/**
 * Implements hook_mail().
 */
function leadtrekker_mail($key, &$message, $params) {
  $message['subject'] = t('Leadtrekker leads insertion error');

  switch ($key) {
    case 'http_error':
      $message['body'][] = t('When attempting to submit the form "@form" to Leadtrekker, a HTTP error occurred.', array(
        '@form' => $params['node_title'],
      ));
      break;

    case 'hub_error':
      $message['body'][] = t('Upon submitting the Webform "@form" to Leadtrekker, an error was returned.', array(
        '@form' => $params['node_title'],
      ));
      break;
  }

  $message['body'][] = t('Error message: @message', array('@message' => $params['errormsg']));
  $message['body'][] = t('Leadtrekker POST URL: @url', array('@url' => $params['leadtrekker_url']));
  $message['body'][] = t('To adjust the debugging settings, visit @url', array(
    '@url' => Url::fromRoute('leadtrekker.admin_settings')->toString(),
  ));
}